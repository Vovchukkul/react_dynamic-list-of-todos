{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","handleOpenModal","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","handleQueryChange","query","handleQueryDelete","handleFilterActive","handleFilterCompleted","handleFilterAll","onChange","e","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterValue","Loader","TodoModal","handleCloseModal","useState","user","setUser","isUserLoading","setIsUserLoading","useEffect","timeout","clearTimeout","userId","catch","error","Error","href","email","name","App","setTodos","setQuery","isLoading","setIsLoading","setSelectedTodo","All","filterValue","setFilterValue","visibleTodos","filter","Completed","Active","prepQuery","trim","toLowerCase","includes","getPreparedTodos","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45403ec4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleOpenModal: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    handleOpenModal,\n    selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed === true && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                classNames(todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleOpenModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye-slash':\n                        selectedTodo && todo.id === selectedTodo.id,\n                      'fa-eye': !selectedTodo,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string;\n  handleQueryChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  handleQueryDelete: () => void;\n  handleFilterActive: () => void;\n  handleFilterCompleted: () => void;\n  handleFilterAll: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    handleQueryChange,\n    query,\n    handleQueryDelete,\n    handleFilterActive,\n    handleFilterCompleted,\n    handleFilterAll,\n  },\n) => {\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = e.target.value;\n\n    switch (selectedValue) {\n      case 'active':\n        handleFilterActive();\n        break;\n      case 'completed':\n        handleFilterCompleted();\n        break;\n      default:\n        handleFilterAll();\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryDelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nenum FilterValue {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\nfunction getPreparedTodos(todos: Todo[], query: string, filterValue: FilterValue) {\n  return todos.filter(todo => {\n    switch (filterValue) {\n      case FilterValue.Completed:\n        return todo.completed === true;\n      case FilterValue.Active:\n        return todo.completed === false;\n      case FilterValue.All:\n        return true;\n      default:\n        return false;\n    }\n  }).filter(todo => {\n    if (query) {\n      const prepQuery = query.trim().toLowerCase();\n\n      return todo.title.toLowerCase().includes(prepQuery);\n    }\n\n    return true;\n  });\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterValue, setFilterValue] = useState(FilterValue.All);\n  const visibleTodos = getPreparedTodos(todos, query, filterValue);\n\n  const handleOpenModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleQueryDelete = () => {\n    setQuery('');\n  };\n\n  const handleFilterCompleted = () => {\n    setFilterValue(FilterValue.Completed);\n  };\n\n  const handleFilterActive = () => {\n    setFilterValue(FilterValue.Active);\n  };\n\n  const handleFilterAll = () => {\n    setFilterValue(FilterValue.All);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      getTodos().then((data) => {\n        setIsLoading(false);\n        setTodos(data);\n      });\n    }, 500);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQueryChange={handleQueryChange}\n                query={query}\n                handleQueryDelete={handleQueryDelete}\n                handleFilterCompleted={handleFilterCompleted}\n                handleFilterActive={handleFilterActive}\n                handleFilterAll={handleFilterAll}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={visibleTodos} handleOpenModal={handleOpenModal} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && !isLoading && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  handleCloseModal: () => void;\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    handleCloseModal,\n    selectedTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsUserLoading(false);\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [setIsUserLoading]);\n\n  useEffect(() => {\n    if (selectedTodo && selectedTodo.userId) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .catch((error) => {\n          throw new Error(error);\n        });\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                <span>\n                  {`Todo #${selectedTodo.id}`}\n                </span>\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed === true\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                {user ? (\n                  <a href={`mailto:${user.email}`} data-cy=\"todo\">\n                    {user.name}\n                  </a>\n                ) : (\n                  <Loader />\n                )}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}