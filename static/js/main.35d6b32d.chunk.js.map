{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleOpenModal","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","handleQueryChange","query","handleQueryDelete","handleFilterActive","handleFilterCompleted","handleFilterAll","onChange","e","selectedValue","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","handleCloseModal","setModalVisible","useState","user","setUser","loadingUser","setLoadingUser","useEffect","timeout","userId","userData","catch","error","Error","finally","clearTimeout","href","name","App","setTodos","setQuery","visibleTodos","preparedTodos","prepQuery","trim","toLowerCase","filter","includes","getPreparedTodos","loading","setLoading","modalVisible","setSelectedTodo","filterValue","setFilterValue","data","ReactDOM","render","document","getElementById"],"mappings":"2PAUaA,EAA4B,SAAC,GAMpC,IAJFC,EAIC,EAJDA,MACAC,EAGC,EAHDA,gBACAC,EAEC,EAFDA,aAGF,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GAAD,OACT,qBAAkB,UAAQ,OAAOF,UAAU,GAA3C,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,UACsB,IAAnBE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UACDK,IAAWH,EAAKE,UACZ,mBACA,mBAHN,SAMGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMV,EAAgBI,IAJjC,SAME,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UAAWK,IAAW,MAAO,CAC3B,eACEN,GAAgBG,EAAKC,KAAOJ,EAAaI,GAC3C,UAAWJ,cA/BdG,EAAKC,aCzBXM,EAA8B,SAAC,GAStC,IAPFC,EAOC,EAPDA,kBACAC,EAMC,EANDA,MACAC,EAKC,EALDA,kBACAC,EAIC,EAJDA,mBACAC,EAGC,EAHDA,sBACAC,EAEC,EAFDA,gBAGF,OACE,uBAAMf,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRgB,SAAU,SAACC,GACT,IAAMC,EAAgBD,EAAEE,OAAOC,MAET,WAAlBF,EACFL,IAC2B,cAAlBK,EACTJ,IAEAC,KAVN,UAcE,wBAAQK,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGpB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVqB,YAAY,YACZD,MAAOT,EACPK,SAAUN,IAEZ,sBAAMV,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRhB,KAAK,SACLP,UAAU,SACVQ,QAASI,aClDvB,SAASY,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICrBMC,EAAmB,kBAC9B,qBAAKnC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCONoC,EAA6B,SAAC,GAMrC,IAJFC,EAIC,EAJDA,iBACAC,EAGC,EAHDA,gBACAvC,EAEC,EAFDA,aAGF,EAAwBwC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KA4BA,OA1BAC,qBAAU,WACR,IAAIC,EFGgBC,EEiBpB,OAlBI/C,GAAgBA,EAAa+C,SAC/BH,GAAe,IFAGG,EEEV/C,EAAa+C,OFFgBtB,EAAG,iBAAiBsB,KEGtDf,MAAK,SAACgB,GACLN,EAAQM,MAETC,OAAM,SAACC,GACN,MAAM,IAAIC,MAAMD,MAEjBE,SAAQ,WACPN,EAAUf,YAAW,WACnBa,GAAe,GACfL,GAAgB,KACf,SAIF,WACLc,aAAaP,MAEd,CAAC9C,EAAc4C,EAAgBL,IAGhC,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEd0C,EACC,cAAC,EAAD,IAEA,8BACE,sBAAK1C,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,SAIE,+CACYD,EAAaI,QAK3B,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS6B,OAIb,sBAAKrC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGD,EAAaO,QAGhB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,WAC8B,IAA3BD,EAAaK,UACV,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBAAGqD,KAAK,2BAA2B,UAAQ,OAA3C,gBACGb,QADH,IACGA,OADH,EACGA,EAAMc,sBC/DlB,IAAMC,EAAgB,WAC3B,MAA0BhB,mBAAiB,IAA3C,mBAAO1C,EAAP,KAAc2D,EAAd,KACA,EAA0BjB,mBAAS,IAAnC,mBAAO5B,EAAP,KAAc8C,EAAd,KACMC,EAjBR,SAA0B7D,EAAec,GACvC,IAAIgD,EAAa,YAAO9D,GAExB,GAAIc,EAAO,CACT,IAAMiD,EAAYjD,EAAMkD,OAAOC,cAE/BH,EAAgBA,EAAcI,QAC5B,SAAA7D,GAAI,OAAIA,EAAKI,MAAMwD,cAAcE,SAASJ,MAI9C,OAAOD,EAMcM,CAAiBpE,EAAOc,GAC7C,EAA8B4B,oBAAS,GAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KACA,EAAwC5B,oBAAS,GAAjD,mBAAO6B,EAAP,KAAqB9B,EAArB,KACA,EAAwCC,mBAAsB,MAA9D,mBAAOxC,EAAP,KAAqBsE,EAArB,KACA,EAAsC9B,mBAAS,OAA/C,mBAAO+B,EAAP,KAAoBC,EAApB,KAiDA,OAjBA3B,qBAAU,WACRd,YAAW,WH1CeN,EAAY,UG2CzBO,MAAK,SAACyC,GACfL,GAAW,GACX7B,GAAgB,GAGdkB,EADkB,cAAhBc,EACOE,EAAKT,QAAO,SAAC7D,GAAD,OAA6B,IAAnBA,EAAKE,aACX,WAAhBkE,EACAE,EAAKT,QAAO,SAAC7D,GAAD,OAA6B,IAAnBA,EAAKE,aAE3BoE,QAGZ,OACF,CAACF,IAGF,qCACE,qBAAKtE,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,kBA9CY,SAACO,GACzBwC,EAASxC,EAAEE,OAAOC,QA8CNT,MAAOA,EACPC,kBA5CY,WACxB6C,EAAS,KA4CG3C,sBAzCgB,WAC5ByD,EAAe,cAyCH1D,mBAtCa,WACzB0D,EAAe,WAsCHxD,gBAnCU,WACtBwD,EAAe,YAsCP,qBAAKvE,UAAU,QAAf,SACGkE,EACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAUrE,MAAO6D,EAAc5D,gBApEvB,SAACI,GACvBoC,GAAgB,GAChB+B,EAAgBnE,IAkE+DH,aAAcA,aAM1FA,GAAgBqE,IAAiBF,GAChC,cAAC,EAAD,CACEnE,aAAcA,EACdsC,iBAxEiB,WACvBC,GAAgB,GAChB+B,EAAgB,OAuEV/B,gBAAiBA,QC9G3BmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35d6b32d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleOpenModal: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    handleOpenModal,\n    selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed === true && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                classNames(todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger')\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleOpenModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye-slash':\n                        selectedTodo && todo.id === selectedTodo.id,\n                      'fa-eye': !selectedTodo,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string;\n  handleQueryChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  handleQueryDelete: () => void;\n  handleFilterActive: () => void;\n  handleFilterCompleted: () => void;\n  handleFilterAll: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    handleQueryChange,\n    query,\n    handleQueryDelete,\n    handleFilterActive,\n    handleFilterCompleted,\n    handleFilterAll,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              const selectedValue = e.target.value;\n\n              if (selectedValue === 'active') {\n                handleFilterActive();\n              } else if (selectedValue === 'completed') {\n                handleFilterCompleted();\n              } else {\n                handleFilterAll();\n              }\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryDelete}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  handleCloseModal: () => void;\n  setModalVisible: (con: boolean) => void;\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    handleCloseModal,\n    setModalVisible,\n    selectedTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingUser, setLoadingUser] = useState(false);\n\n  useEffect(() => {\n    let timeout: NodeJS.Timeout;\n\n    if (selectedTodo && selectedTodo.userId) {\n      setLoadingUser(true);\n\n      getUser(selectedTodo.userId)\n        .then((userData) => {\n          setUser(userData);\n        })\n        .catch((error) => {\n          throw new Error(error);\n        })\n        .finally(() => {\n          timeout = setTimeout(() => {\n            setLoadingUser(false);\n            setModalVisible(true);\n          }, 500);\n        });\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [selectedTodo, setLoadingUser, setModalVisible]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingUser ? (\n        <Loader />\n      ) : (\n        <div>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                <span>\n                  {`Todo #${selectedTodo.id}`}\n                </span>\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed === true\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\" data-cy=\"todo\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nfunction getPreparedTodos(todos: Todo[], query: string) {\n  let preparedTodos = [...todos];\n\n  if (query) {\n    const prepQuery = query.trim().toLowerCase();\n\n    preparedTodos = preparedTodos.filter(\n      todo => todo.title.toLowerCase().includes(prepQuery),\n    );\n  }\n\n  return preparedTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const visibleTodos = getPreparedTodos(todos, query);\n  const [loading, setLoading] = useState(true);\n  const [modalVisible, setModalVisible] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterValue, setFilterValue] = useState('all');\n\n  const handleOpenModal = (todo: Todo) => {\n    setModalVisible(true);\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseModal = () => {\n    setModalVisible(false);\n    setSelectedTodo(null);\n  };\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleQueryDelete = () => {\n    setQuery('');\n  };\n\n  const handleFilterCompleted = () => {\n    setFilterValue('completed');\n  };\n\n  const handleFilterActive = () => {\n    setFilterValue('active');\n  };\n\n  const handleFilterAll = () => {\n    setFilterValue('all');\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      getTodos().then((data) => {\n        setLoading(false);\n        setModalVisible(false);\n\n        if (filterValue === 'completed') {\n          setTodos(data.filter((todo) => todo.completed === true));\n        } else if (filterValue === 'active') {\n          setTodos(data.filter((todo) => todo.completed === false));\n        } else {\n          setTodos(data);\n        }\n      });\n    }, 500);\n  }, [filterValue]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQueryChange={handleQueryChange}\n                query={query}\n                handleQueryDelete={handleQueryDelete}\n                handleFilterCompleted={handleFilterCompleted}\n                handleFilterActive={handleFilterActive}\n                handleFilterAll={handleFilterAll}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : <TodoList todos={visibleTodos} handleOpenModal={handleOpenModal} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && modalVisible && !loading && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseModal={handleCloseModal}\n          setModalVisible={setModalVisible}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}